!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("rxjs"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","rxjs","@angular/common"],e):e(((t="undefined"!=typeof globalThis?globalThis:t||self).angular=t.angular||{},t.angular.datatables={}),t.ng.core,0,t.ng.common)}(this,function(t,e,n,o){"use strict";var r=(i.prototype.ngOnInit=function(){var t=this;this.dtTrigger?this.dtTrigger.subscribe(function(){t.displayTable()}):this.displayTable()},i.prototype.ngOnDestroy=function(){this.dtTrigger&&this.dtTrigger.unsubscribe(),this.dt&&this.dt.destroy(!0)},i.prototype.displayTable=function(){var o=this;this.dtInstance=new Promise(function(e,t){Promise.resolve(o.dtOptions).then(function(n){setTimeout(function(){var t={rowCallback:function(a,t,e){if(n.columns){var s=n.columns;s.filter(function(t){return t.ngPipeInstance}).forEach(function(e){var t=e.ngPipeInstance,n=s.findIndex(function(t){return t.data==e.data}),o=a.childNodes.item(n),r=$(o).text(),i=t.transform(r);$(o).text(i)})}o.dtOptions.rowCallback&&o.dtOptions.rowCallback(a,t,e)}};t=Object.assign({},n,t),o.dt=$(o.el.nativeElement).DataTable(t),e(o.dt)})})})},i.decorators=[{type:e.Directive,args:[{selector:"[datatable]"}]}],i.ctorParameters=function(){return[{type:e.ElementRef}]},i.propDecorators={dtOptions:[{type:e.Input}],dtTrigger:[{type:e.Input}]},i);function i(t){this.el=t,this.dtOptions={}}var a=(s.forRoot=function(){return{ngModule:s}},s.decorators=[{type:e.NgModule,args:[{imports:[o.CommonModule],declarations:[r],exports:[r]}]}],s);function s(){}t.DataTableDirective=r,t.DataTablesModule=a,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=angular-datatables.umd.min.js.map
