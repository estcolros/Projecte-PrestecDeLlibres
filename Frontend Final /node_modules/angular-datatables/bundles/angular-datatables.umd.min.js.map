{"version":3,"file":"angular-datatables.umd.min.js","sources":["../src/angular-datatables.directive.js","../src/angular-datatables.module.js"],"sourcesContent":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el) {\n        this.el = el;\n        /**\n         * The DataTable option you pass to configure your table.\n         */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function () {\n                _this.displayTable();\n            });\n        }\n        else {\n            this.displayTable();\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function () {\n        var _this = this;\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    // Assign DT properties here\n                    var options = {\n                        rowCallback: function (row, data, index) {\n                            if (dtOptions.columns) {\n                                var columns_1 = dtOptions.columns;\n                                // Filter columns with pipe declared\n                                var colsWithPipe = columns_1.filter(function (x) { return x.ngPipeInstance; });\n                                // Iterate\n                                colsWithPipe.forEach(function (el) {\n                                    var pipe = el.ngPipeInstance;\n                                    // find index of column using `data` attr\n                                    var i = columns_1.findIndex(function (e) { return e.data == el.data; });\n                                    // get <td> element which holds data using index\n                                    var rowFromCol = row.childNodes.item(i);\n                                    // Transform data with Pipe\n                                    var rowVal = $(rowFromCol).text();\n                                    var rowValAfter = pipe.transform(rowVal);\n                                    // Apply transformed string to <td>\n                                    $(rowFromCol).text(rowValAfter);\n                                });\n                            }\n                            // run user specified row callback if provided.\n                            if (_this.dtOptions.rowCallback) {\n                                _this.dtOptions.rowCallback(row, data, index);\n                            }\n                        }\n                    };\n                    // merge user's config with ours\n                    options = Object.assign({}, dtOptions, options);\n                    _this.dt = $(_this.el.nativeElement).DataTable(options);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[datatable]'\n                },] }\n    ];\n    DataTableDirective.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    DataTableDirective.propDecorators = {\n        dtOptions: [{ type: Input }],\n        dtTrigger: [{ type: Input }]\n    };\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\n//# sourceMappingURL=angular-datatables.directive.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\n    DataTablesModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [DataTableDirective],\n                    exports: [DataTableDirective]\n                },] }\n    ];\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\n//# sourceMappingURL=angular-datatables.module.js.map"],"names":["DataTableDirective","prototype","ngOnInit","_this","this","dtTrigger","subscribe","displayTable","ngOnDestroy","unsubscribe","dt","destroy","dtInstance","Promise","resolve","reject","dtOptions","then","setTimeout","options","rowCallback","row","data","index","columns","columns_1","filter","x","ngPipeInstance","forEach","el","pipe","i","findIndex","e","rowFromCol","childNodes","item","rowVal","$","text","rowValAfter","transform","Object","assign","nativeElement","DataTable","decorators","type","Directive","args","selector","ctorParameters","ElementRef","propDecorators","Input","DataTablesModule","forRoot","ngModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"kaAQIA,GAQAA,EAAmBC,UAAUC,SAAW,WACpC,IAAIC,EAAQC,KACRA,KAAKC,UACLD,KAAKC,UAAUC,UAAU,WACrBH,EAAMI,iBAIVH,KAAKG,gBAGbP,EAAmBC,UAAUO,YAAc,WACnCJ,KAAKC,WACLD,KAAKC,UAAUI,cAEfL,KAAKM,IACLN,KAAKM,GAAGC,SAAQ,IAGxBX,EAAmBC,UAAUM,aAAe,WACxC,IAAIJ,EAAQC,KACZA,KAAKQ,WAAa,IAAIC,QAAQ,SAAUC,EAASC,GAC7CF,QAAQC,QAAQX,EAAMa,WAAWC,KAAK,SAAUD,GAE5CE,WAAW,WAEP,IAAIC,EAAU,CACVC,YAAa,SAAUC,EAAKC,EAAMC,GAC9B,GAAIP,EAAUQ,QAAS,CACnB,IAAIC,EAAYT,EAAUQ,QAEPC,EAAUC,OAAO,SAAUC,GAAK,OAAOA,EAAEC,iBAE/CC,QAAQ,SAAUC,GAC3B,IAAIC,EAAOD,EAAGF,eAEVI,EAAIP,EAAUQ,UAAU,SAAUC,GAAK,OAAOA,EAAEZ,MAAQQ,EAAGR,OAE3Da,EAAad,EAAIe,WAAWC,KAAKL,GAEjCM,EAASC,EAAEJ,GAAYK,OACvBC,EAAcV,EAAKW,UAAUJ,GAEjCC,EAAEJ,GAAYK,KAAKC,KAIvBtC,EAAMa,UAAUI,aAChBjB,EAAMa,UAAUI,YAAYC,EAAKC,EAAMC,KAKnDJ,EAAUwB,OAAOC,OAAO,GAAI5B,EAAWG,GACvChB,EAAMO,GAAK6B,EAAEpC,EAAM2B,GAAGe,eAAeC,UAAU3B,GAC/CL,EAAQX,EAAMO,WAK9BV,EAAmB+C,WAAa,CAC5B,CAAEC,KAAMC,YAAWC,KAAM,CAAC,CACdC,SAAU,kBAG1BnD,EAAmBoD,eAAiB,WAAc,MAAO,CACrD,CAAEJ,KAAMK,gBAEZrD,EAAmBsD,eAAiB,CAChCtC,UAAW,CAAC,CAAEgC,KAAMO,UACpBlD,UAAW,CAAC,CAAE2C,KAAMO,WAEjBvD,GA/EP,SAASA,EAAmB8B,GACxB1B,KAAK0B,GAAKA,EAIV1B,KAAKY,UAAY,OCLrBwC,GAGAA,EAAiBC,QAAU,WACvB,MAAO,CACHC,SAAUF,IAGlBA,EAAiBT,WAAa,CAC1B,CAAEC,KAAMW,WAAUT,KAAM,CAAC,CACbU,QAAS,CAACC,gBACVC,aAAc,CAAC9D,GACf+D,QAAS,CAAC/D,OAGnBwD,GAdP,SAASA"}